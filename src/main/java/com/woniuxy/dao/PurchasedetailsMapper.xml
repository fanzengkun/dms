<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.woniuxy.dao.PurchasedetailsMapper">
  <resultMap id="BaseResultMap" type="com.woniuxy.domain.Purchasedetails">
    <id column="pid" jdbcType="INTEGER" property="pid" />
    <result column="poid" jdbcType="INTEGER" property="poid" />
    <result column="mid" jdbcType="INTEGER" property="mid" />
    <result column="pnumber" jdbcType="INTEGER" property="pnumber" />
    <result column="time" jdbcType="DATE" property="time" />
    <result column="qualityGuarantePeriod" jdbcType="DATE" property="qualityguaranteperiod" />
    <result column="sid" jdbcType="INTEGER" property="sid" />
    <result column="aid" jdbcType="INTEGER" property="aid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pid, poid, mid, pnumber, time, qualityGuarantePeriod, sid, aid
  </sql>
  <select id="selectByExample" parameterType="com.woniuxy.domain.PurchasedetailsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from purchasedetails
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from purchasedetails
    where pid = #{pid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from purchasedetails
    where pid = #{pid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.woniuxy.domain.PurchasedetailsExample">
    delete from purchasedetails
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.woniuxy.domain.Purchasedetails">
    insert into purchasedetails (pid, poid, mid, 
      pnumber, time, qualityGuarantePeriod, 
      sid, aid)
    values (#{pid,jdbcType=INTEGER}, #{poid,jdbcType=INTEGER}, #{mid,jdbcType=INTEGER}, 
      #{pnumber,jdbcType=INTEGER}, #{time,jdbcType=DATE}, #{qualityguaranteperiod,jdbcType=DATE}, 
      #{sid,jdbcType=INTEGER}, #{aid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.woniuxy.domain.Purchasedetails">
    insert into purchasedetails
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        pid,
      </if>
      <if test="poid != null">
        poid,
      </if>
      <if test="mid != null">
        mid,
      </if>
      <if test="pnumber != null">
        pnumber,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="qualityguaranteperiod != null">
        qualityGuarantePeriod,
      </if>
      <if test="sid != null">
        sid,
      </if>
      <if test="aid != null">
        aid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="poid != null">
        #{poid,jdbcType=INTEGER},
      </if>
      <if test="mid != null">
        #{mid,jdbcType=INTEGER},
      </if>
      <if test="pnumber != null">
        #{pnumber,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=DATE},
      </if>
      <if test="qualityguaranteperiod != null">
        #{qualityguaranteperiod,jdbcType=DATE},
      </if>
      <if test="sid != null">
        #{sid,jdbcType=INTEGER},
      </if>
      <if test="aid != null">
        #{aid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.woniuxy.domain.PurchasedetailsExample" resultType="java.lang.Long">
    select count(*) from purchasedetails
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update purchasedetails
    <set>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.poid != null">
        poid = #{record.poid,jdbcType=INTEGER},
      </if>
      <if test="record.mid != null">
        mid = #{record.mid,jdbcType=INTEGER},
      </if>
      <if test="record.pnumber != null">
        pnumber = #{record.pnumber,jdbcType=INTEGER},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=DATE},
      </if>
      <if test="record.qualityguaranteperiod != null">
        qualityGuarantePeriod = #{record.qualityguaranteperiod,jdbcType=DATE},
      </if>
      <if test="record.sid != null">
        sid = #{record.sid,jdbcType=INTEGER},
      </if>
      <if test="record.aid != null">
        aid = #{record.aid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update purchasedetails
    set pid = #{record.pid,jdbcType=INTEGER},
      poid = #{record.poid,jdbcType=INTEGER},
      mid = #{record.mid,jdbcType=INTEGER},
      pnumber = #{record.pnumber,jdbcType=INTEGER},
      time = #{record.time,jdbcType=DATE},
      qualityGuarantePeriod = #{record.qualityguaranteperiod,jdbcType=DATE},
      sid = #{record.sid,jdbcType=INTEGER},
      aid = #{record.aid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.woniuxy.domain.Purchasedetails">
    update purchasedetails
    <set>
      <if test="poid != null">
        poid = #{poid,jdbcType=INTEGER},
      </if>
      <if test="mid != null">
        mid = #{mid,jdbcType=INTEGER},
      </if>
      <if test="pnumber != null">
        pnumber = #{pnumber,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=DATE},
      </if>
      <if test="qualityguaranteperiod != null">
        qualityGuarantePeriod = #{qualityguaranteperiod,jdbcType=DATE},
      </if>
      <if test="sid != null">
        sid = #{sid,jdbcType=INTEGER},
      </if>
      <if test="aid != null">
        aid = #{aid,jdbcType=INTEGER},
      </if>
    </set>
    where pid = #{pid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.woniuxy.domain.Purchasedetails">
    update purchasedetails
    set poid = #{poid,jdbcType=INTEGER},
      mid = #{mid,jdbcType=INTEGER},
      pnumber = #{pnumber,jdbcType=INTEGER},
      time = #{time,jdbcType=DATE},
      qualityGuarantePeriod = #{qualityguaranteperiod,jdbcType=DATE},
      sid = #{sid,jdbcType=INTEGER},
      aid = #{aid,jdbcType=INTEGER}
    where pid = #{pid,jdbcType=INTEGER}
  </update>
  
  
  
  
  <!-- 普通分页 -->
  <!-- 总行数 -->
  <select id="getRowCount" resultType="Integer">
  	SELECT COUNT(*) FROM purchasedetails
  </select>
  <!-- 分页数据 -->
  <select id="findSomeByPage" resultType="Purchasedetails">
  	select * from purchasedetails LIMIT ${startLine},${fsize}
  </select>
  
  <!-- 有条件分页 -->
  <!-- 条件数据记录数 -->
  <select id="getRowCountBySome" parameterType="com.woniuxy.domain.Purchasedetails" resultType="Integer">
  	SELECT COUNT(*) FROM purchasedetails 
  		<where>
  			<if test="pid!=null">
  				and pid like '%${pid}%'
  			</if>
  			<if test="poid!=null">
  				and poid like '%${poid}%'
  			</if>
  			<if test="mid!=null">
  				and mid like '%${mid}%'
  			</if>
  			<if test="pnumber!=null">
  				and pnumber like '%${pnumber}%'
  			</if>
  			<if test="sid!=null">
  				and sid like '%${sid}%'
  			</if>
  		</where>
  </select>
  <!-- 条件数据 -->
  <select id="findSomeBySome" parameterType="map" resultType="Purchasedetails">
  	SELECT * FROM purchasedetails 
  		<where>
  			<if test="pd.pid!=null">
  				and pid like '%${pd.pid}%'
  			</if>
  			<if test="pd.poid!=null">
  				and poid like '%${pd.poid}%'
  			</if>
  			<if test="pd.mid!=null">
  				and mid like '%${pd.mid}%'
  			</if>
  			<if test="pd.pnumber!=null">
  				and pnumber like '%${pd.pnumber}%'
  			</if>
  			<if test="pd.time!=null">
  				and time  DATE_FORMAT(purchasedetails.time,'%Y-%m-%d')
  			 	like '%${pd.time}%'
  			</if>
  			<if test="pd.qualityguaranteperiod!=null">
  				and qualityguaranteperiod   DATE_FORMAT(purchasedetails.qualityguaranteperiod,'%Y-%m-%d') 
  				like '%${pd.qualityguaranteperiod}%'
  			</if>
  			<if test="pd.sid!=null">
  				and sid like '%${pd.sid}%'
  			</if>
  		</where>
  		limit ${startLine},${fsize}
  </select>
  
  <select id="getRowCountByTime" resultType="Integer">
  	select count(*) from purchasedetails where DATE_FORMAT(purchasedetails.time,'%Y-%m-%d')
  	like '%${time}%' 
  </select>
  <select id="getRowCountByQualityguaranteperiod" resultType="Integer">
  	select count(*) from purchasedetails where DATE_FORMAT(purchasedetails.qualityguaranteperiod,'%Y-%m-%d') 
  	like '%${qualityguaranteperiod}%' 
  </select>
  
  <select id="findSomeByTime" resultType="Purchasedetails">
  	select * from purchasedetails where DATE_FORMAT(purchasedetails.time,'%Y-%m-%d') 
  	like '%${time}%' limit ${startLine},${fsize}
  </select>
  <select id="findSomeByQualityguaranteperiod" resultType="Purchasedetails">
  	select * from purchasedetails where DATE_FORMAT(purchasedetails.qualityguaranteperiod,'%Y-%m-%d') 
  	like '%${qualityguaranteperiod}%' limit ${startLine},${fsize}
  </select>
  
  <select id="findpdondo" resultType="Integer">
  	select count(purchasedetails.pid) from purchasedetails WHERE poid=#{poid}
  </select>
  <delete id="delpo">
  	delete from purchaseorder where poid=#{poid}
  </delete>
</mapper>