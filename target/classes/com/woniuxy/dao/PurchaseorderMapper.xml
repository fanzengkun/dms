<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.woniuxy.dao.PurchaseorderMapper">
  <resultMap id="BaseResultMap" type="com.woniuxy.domain.Purchaseorder">
    <id column="poid" jdbcType="INTEGER" property="poid" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    poid, pid
  </sql>
  <select id="selectByExample" parameterType="com.woniuxy.domain.PurchaseorderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from purchaseorder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from purchaseorder
    where poid = #{poid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from purchaseorder
    where poid = #{poid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.woniuxy.domain.PurchaseorderExample">
    delete from purchaseorder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.woniuxy.domain.Purchaseorder">
    insert into purchaseorder (poid, pid)
    values (#{poid,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.woniuxy.domain.Purchaseorder">
    insert into purchaseorder
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="poid != null">
        poid,
      </if>
      <if test="pid != null">
        pid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="poid != null">
        #{poid,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.woniuxy.domain.PurchaseorderExample" resultType="java.lang.Long">
    select count(*) from purchaseorder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update purchaseorder
    <set>
      <if test="record.poid != null">
        poid = #{record.poid,jdbcType=INTEGER},
      </if>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update purchaseorder
    set poid = #{record.poid,jdbcType=INTEGER},
      pid = #{record.pid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.woniuxy.domain.Purchaseorder">
    update purchaseorder
    <set>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
    </set>
    where poid = #{poid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.woniuxy.domain.Purchaseorder">
    update purchaseorder
    set pid = #{pid,jdbcType=INTEGER}
    where poid = #{poid,jdbcType=INTEGER}
  </update>
  
  <!-- 
  	根据业务自己加的
   -->
   <!-- 返回订单表的id和明细表的订单时间 -->
   <!-- mybatis使用sql查询的结果，只要你设定的resultMap或其他，属性-字段的类型只要对应，一定到这个实体对象上，额 -->
  <select id="findpoAndpd" resultMap="poAndpd1">
  	select distinct purchasedetails.time,purchaseorder.poid from purchaseorder
	JOIN purchasedetails ON purchasedetails.poid=purchaseorder.poid
	ORDER BY purchasedetails.time
  </select>
  <resultMap type="Purchaseorder" id="poAndpd1">
  	 <id column="poid" jdbcType="INTEGER" property="poid" />
     <result column="time" jdbcType="DATE" property="time" />
  </resultMap>
  
  <update id="close">
  	SET FOREIGN_KEY_CHECKS=0
  </update>
   <update id="open">
  	SET FOREIGN_KEY_CHECKS=1
  </update>
  <delete id="delByPoid" parameterType="Integer">
  	delete purchasedetails,purchaseorder from purchasedetails
	inner join purchaseorder on purchasedetails.poid=purchaseorder.poid
	where purchaseorder.poid=#{poid}
  </delete>
  
  <insert id="saveTopo" parameterType="Purchaseorder">
  	insert into purchaseorder values(null,null)
  </insert>
  <insert id="saveTopd" parameterType="Purchasedetails">
  	insert into purchasedetails values(null,#{poid},#{mid},#{pnumber},null,#{qualityguaranteperiod},#{sid},null)
  </insert>
  <select id="findMaxpoid" resultType="Integer">
  	SELECT MAX(poid) from purchaseorder
  </select>
  <update id="saveDate" parameterType="Purchasedetails">
  	update purchasedetails set time=#{time} where poid=#{poid}
  </update>
  
  
  <!-- 分页 -->
  <!-- 查询订单表记录数 -->
  <select id="getRowCount" resultType="Integer">
  	SELECT COUNT(*) FROM purchaseorder
  </select>
  <!-- 查询两表分页数据 -->
  <select id="findSomeByPage" resultType="Purchasedetails">
  	select distinct purchasedetails.time,purchaseorder.poid from purchasedetails
	JOIN purchaseorder ON purchasedetails.poid=purchaseorder.poid 
	LIMIT ${starLine},${fsize}
  </select>
  
  <!-- 根据搜索查询两表分页数据 -->
  <!-- 总行数 -->
  <select id="getRowCountBySeachTime" resultType="Integer">
  	select COUNT(DISTINCT purchasedetails.time,purchaseorder.poid) from purchasedetails
	JOIN purchaseorder ON purchasedetails.poid=purchaseorder.poid 
	where purchasedetails.time like '${ftime}%'
  </select>
  <select id="getRowCountBySeachId" resultType="Integer">
  	select COUNT(DISTINCT purchasedetails.time,purchaseorder.poid) from purchasedetails
	JOIN purchaseorder ON purchasedetails.poid=purchaseorder.poid
	where purchaseorder.poid like '%${fpoid}%'
  </select>
  
  <select id="findSomeBySeachTime" resultType="Purchasedetails">
  	select distinct purchasedetails.time,purchaseorder.poid from purchasedetails
	JOIN purchaseorder ON purchasedetails.poid=purchaseorder.poid 
	where DATE_FORMAT(purchasedetails.time,'%Y-%m-%d') like '${ftime}%' 
	limit ${starLine},${fsize}
  </select>
  <select id="findSomeBySeachId" resultType="Purchasedetails">
  	select distinct purchasedetails.time,purchaseorder.poid from purchasedetails
	JOIN purchaseorder ON purchasedetails.poid=purchaseorder.poid 
	where purchaseorder.poid like '%${fpoid}%' 
	limit ${starLine},${fsize}
  </select>
</mapper>